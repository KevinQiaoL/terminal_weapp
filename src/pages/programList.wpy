<template>
<block>
    <view class="header">
        <view class="back-btn" @tap="navigateBack()">
            <van-icon custom-class="icon" name="arrow-left" color="#ffffff" size="32rpx" />
        </view>
        <view class="title">
            {{programs_name}}
        </view>
    </view>
    <view class="bar table-bar" style="border-bottom: none;">
        <view class="col col-30">
            开始时间
        </view>
        <view class="col col-20">
            序号
        </view>
        <view class="col col-30">
            素材标题
        </view>
        <view class="col col-20">
            时长设置
        </view>
    </view>
    <scroll-view class="container" scroll-y="true">
        <repeat for="{{playList}}" key="index" index="index" item="item">
            <repeat for="{{item.play_resources}}" key="id" index="id" item="p">
                <view class="row" style="color: #666">
                    <view class="col col-30">
                        {{p.play_time}}
                    </view>
                    <view class="col col-20">
                        {{p.weight}}
                    </view>
                    <view class="col col-30">
                        {{p.name}}
                    </view>
                    <view class="col col-20">
                        {{p.play_num}} {{p.play_unit == 0 ? '秒' : '次'}}
                    </view>
                </view>
            </repeat>
        </repeat>
    </scroll-view>
    <view class="set-cont" wx:if="{{action == 'set'}}">
        <button class="save" @tap="saveProgram()">
            保存
        </button>
        <button class="cancel" @tap="navigateBack()">
            取消
        </button>
    </view>
</block>
</template>

<script>
import wepy from 'wepy'
import { programInfo } from '../api/api'
export default class ProgramList extends wepy.page {
  config = {
    usingComponents: {
        'van-icon': '../resources/ui/icon/index'
    }
  }
  data = {
    role: '',
    name: '',
    password: '',
    pid: '',
    playList: [],
    action: '',
    area: null,
    device_id: '',
    programs_name: ''
  }
  async programInfo() {
    let res = await programInfo({
        pid: this.pid
    })
    if (res.status == '_0000') {
        this.playList = res.list
        this.playList.map(item => {
            item.play_resources.map(p => {
                p.play_time = p.play_time.substring(0, 2) + ':' + p.play_time.substring(2)
            })
        })
        this.$apply()
    }
  }
  onLoad(options) {
    this.role = JSON.parse(wepy.getStorageSync('_TOKEN')).role
    this.name = JSON.parse(wepy.getStorageSync('_TOKEN')).name
    this.password = JSON.parse(wepy.getStorageSync('_TOKEN')).password
    this.action = options.action
    this.pid = options.pid
    this.programs_name = options.programs_name
    if (this.action == 'set') {
        this.device_id = options.device_id
        this.area = options.area
    }
    this.programInfo()
  }
  methods = {
    navigateBack() {
        wepy.navigateBack({
            delta: 1
        })
    },
    saveProgram() {
        this.$parent.globalData.area = {
            device_id: this.device_id,
            area: JSON.parse(this.area),
            program: {
                pid: this.pid,
                programs_name: this.programs_name
            }
        }
        this.$apply()
        setTimeout(() => {
            wepy.navigateBack({
                delta: 2
            })
        }, 100)
    }
  }
}
</script>

<style lang="scss">
.table-bar, .container .row{
    padding: 0;
    display: flex;
    align-items: center;
    min-height: 90rpx;
    border-bottom: 1rpx solid #eee;
    .col{
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        font-size: 24rpx;
        text-align: center;
        color: inherit;
    }
    .col-30{
        flex: 0 0 30%;
        width: 30%;
    }
    .col-20{
        flex: 0 0 20%;
        width: 20%;
    }
}

.container{
    height: 50vh;
}
.set-cont{
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 80%;
    margin: 20rpx auto;
    button{
        display: block;
        width: 40%;
        margin: 50rpx auto 0;
        background: linear-gradient(90deg, #0335f0, #2488ff);
        box-shadow: 0 5rpx 10rpx lighten($color: #2488ff, $amount: 10%);
        height: 90rpx;
        border-radius: 90rpx;
        color: #fff;
        font-size: 32rpx;
        text-align: center;
        line-height: 90rpx;
        &:active{
            box-shadow: none;
        }
    }
}

</style>
